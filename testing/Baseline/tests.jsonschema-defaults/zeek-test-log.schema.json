### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Schema for Zeek test.log",
  "description": "JSON Schema for Zeek test.log",
  "type": "object",
  "properties": {
    "a": {
      "type": "string",
      "examples": [
        "192.168.0.1",
        "fe80::208:74ff:feda:6210"
      ],
      "description": "An address. Also a comment with \"quotation marks\",\nto verify escaping.",
      "x-zeek": {
        "type": "addr",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "b": {
      "type": "boolean",
      "description": "A boolean.",
      "x-zeek": {
        "type": "bool",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "c": {
      "type": "integer",
      "minimum": 0,
      "description": "A count.",
      "x-zeek": {
        "type": "count",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "d": {
      "type": "number",
      "description": "A double.",
      "x-zeek": {
        "type": "double",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "e": {
      "enum": [
        "icmp",
        "tcp",
        "udp",
        "unknown_transport"
      ],
      "description": "An enum.",
      "x-zeek": {
        "type": "enum transport_proto",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "i": {
      "type": "integer",
      "description": "An integer.",
      "x-zeek": {
        "type": "int",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "ival": {
      "type": "number",
      "description": "An interval.",
      "x-zeek": {
        "type": "interval",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "p": {
      "type": "integer",
      "minimum": 0,
      "maximum": 65535,
      "description": "A port.",
      "x-zeek": {
        "type": "port",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "r.orig_h": {
      "type": "string",
      "examples": [
        "192.168.0.1",
        "fe80::208:74ff:feda:6210"
      ],
      "description": "The originator's IP address.",
      "x-zeek": {
        "type": "addr",
        "record_type": "conn_id",
        "is_optional": false,
        "script": "base/init-bare.zeek"
      }
    },
    "r.orig_p": {
      "type": "integer",
      "minimum": 0,
      "maximum": 65535,
      "description": "The originator's port number.",
      "x-zeek": {
        "type": "port",
        "record_type": "conn_id",
        "is_optional": false,
        "script": "base/init-bare.zeek"
      }
    },
    "r.resp_h": {
      "type": "string",
      "examples": [
        "192.168.0.1",
        "fe80::208:74ff:feda:6210"
      ],
      "description": "The responder's IP address.",
      "x-zeek": {
        "type": "addr",
        "record_type": "conn_id",
        "is_optional": false,
        "script": "base/init-bare.zeek"
      }
    },
    "r.resp_p": {
      "type": "integer",
      "minimum": 0,
      "maximum": 65535,
      "description": "The responder's port number.",
      "x-zeek": {
        "type": "port",
        "record_type": "conn_id",
        "is_optional": false,
        "script": "base/init-bare.zeek"
      }
    },
    "st": {
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 0
      },
      "description": "A set.",
      "x-zeek": {
        "type": "set[count]",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "s": {
      "type": "string",
      "description": "A string.",
      "x-zeek": {
        "type": "string",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "sub": {
      "type": "string",
      "examples": [
        "192.168.0.0/24",
        "fe80::/10"
      ],
      "description": "A subnet.",
      "x-zeek": {
        "type": "subnet",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "t": {
      "type": "number",
      "examples": [
        "1737691432.132607"
      ],
      "description": "A timestamp.",
      "x-zeek": {
        "type": "time",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "v": {
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 0
      },
      "description": "A vector.",
      "x-zeek": {
        "type": "vector of count",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    },
    "sd": {
      "type": "string",
      "description": "A default value.",
      "default": "yes",
      "x-zeek": {
        "type": "string",
        "record_type": "Testlog::Info",
        "is_optional": true,
        "script": "testlog.zeek"
      }
    },
    "so": {
      "type": "string",
      "description": "An optional value.",
      "x-zeek": {
        "type": "string",
        "record_type": "Testlog::Info",
        "is_optional": true,
        "script": "testlog.zeek"
      }
    },
    "aa_plaincomment": {
      "type": "string",
      "x-zeek": {
        "type": "string",
        "record_type": "Testlog::Info",
        "is_optional": false,
        "script": "testlog.zeek"
      }
    }
  },
  "required": [
    "a",
    "b",
    "c",
    "d",
    "e",
    "i",
    "ival",
    "p",
    "r.orig_h",
    "r.orig_p",
    "r.resp_h",
    "r.resp_p",
    "st",
    "s",
    "sub",
    "t",
    "v",
    "aa_plaincomment"
  ]
}
